<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/Assets/02_Scripts/CarController.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Assets/02_Scripts/CarController.cs" />
              <option name="originalContent" value="using UnityEngine;&#10;&#10;/// &lt;summary&gt;단순한 자동차 시스템 - 운전 + 승하차 통합&lt;/summary&gt;&#10;[RequireComponent(typeof(Rigidbody))]&#10;public class CarController : MonoBehaviour&#10;{&#10;    [Header(&quot;자동차 설정&quot;)]&#10;    public float speed = 30f;           // 속도&#10;    public float turnSpeed = 100f;      // 회전 속도&#10;    public float acceleration = 5f;     // 가속도&#10;&#10;    [Header(&quot;승하차 설정&quot;)]&#10;    public Transform driverSeat;        // 운전석 위치&#10;    public Transform exitPoint;         // 하차 위치&#10;&#10;    private Rigidbody rb;&#10;    private float currentSpeed;&#10;    private float targetSpeed;&#10;    &#10;    // 승하차 관련&#10;    private bool playerNear = false;    // 플레이어가 근처에 있는지&#10;    private bool driving = false;       // 운전 중인지&#10;    private GameObject player;          // 플레이어 오브젝트&#10;&#10;    void Start()&#10;    {&#10;        rb = GetComponent&lt;Rigidbody&gt;();&#10;        rb.centerOfMass = new Vector3(0, -0.5f, 0); // 안정성을 위한 낮은 무게중심&#10;    }&#10;&#10;    void Update()&#10;    {&#10;        // E 키로 승하차&#10;        if (playerNear &amp;&amp; Input.GetKeyDown(KeyCode.F))&#10;        {&#10;            if (driving)&#10;                GetOutOfCar();&#10;            else&#10;                GetInCar();&#10;        }&#10;&#10;        // 운전 중일 때만 자동차 조작 가능&#10;        if (driving)&#10;        {&#10;            HandleCarInput();&#10;        }&#10;    }&#10;&#10;    void HandleCarInput()&#10;    {&#10;        // 간단한 입력&#10;        float vertical = Input.GetAxis(&quot;Vertical&quot;);     // W/S&#10;        float horizontal = Input.GetAxis(&quot;Horizontal&quot;); // A/D&#10;        bool brake = Input.GetKey(KeyCode.Space);       // 스페이스&#10;&#10;        // 목표 속도 설정&#10;        if (brake)&#10;            targetSpeed = 0f;&#10;        else&#10;            targetSpeed = vertical * speed;&#10;&#10;        // 부드러운 가속/감속&#10;        currentSpeed = Mathf.MoveTowards(currentSpeed, targetSpeed, acceleration * Time.deltaTime * 10f);&#10;&#10;        // 회전 (이동 중일 때만)&#10;        if (Mathf.Abs(currentSpeed) &gt; 0.1f)&#10;        {&#10;            float turn = horizontal * turnSpeed * Time.deltaTime;&#10;            if (currentSpeed &lt; 0) turn *= -1; // 후진시 반전&#10;            transform.Rotate(0, turn, 0);&#10;        }&#10;    }&#10;&#10;    void FixedUpdate()&#10;    {&#10;        // 운전 중일 때만 이동&#10;        if (driving)&#10;        {&#10;            Vector3 forwardMovement = transform.forward * currentSpeed;&#10;            rb.linearVelocity = new Vector3(forwardMovement.x, rb.linearVelocity.y, forwardMovement.z);&#10;        }&#10;    }&#10;&#10;    void OnTriggerEnter(Collider other)&#10;    {&#10;        if (other.CompareTag(&quot;Player&quot;))&#10;        {&#10;            playerNear = true;&#10;            player = other.gameObject;&#10;        }&#10;    }&#10;&#10;    void OnTriggerExit(Collider other)&#10;    {&#10;        if (other.CompareTag(&quot;Player&quot;))&#10;        {&#10;            playerNear = false;&#10;            player = null;&#10;        }&#10;    }&#10;&#10;    void GetInCar()&#10;    {&#10;        if (player == null || driverSeat == null) return;&#10;&#10;        driving = true;&#10;        &#10;        // 플레이어를 운전석으로 이동&#10;        player.transform.position = driverSeat.position;&#10;        player.transform.rotation = driverSeat.rotation;&#10;        player.transform.SetParent(driverSeat);&#10;&#10;        // 플레이어 이동 막기&#10;        CharacterController cc = player.GetComponent&lt;CharacterController&gt;();&#10;        if (cc != null) cc.enabled = false;&#10;    }&#10;&#10;    void GetOutOfCar()&#10;    {&#10;        if (player == null || exitPoint == null) return;&#10;&#10;        driving = false;&#10;        &#10;        // 자동차 정지&#10;        currentSpeed = 0f;&#10;        targetSpeed = 0f;&#10;&#10;        // 플레이어를 하차 위치로 이동&#10;        player.transform.SetParent(null);&#10;        player.transform.position = exitPoint.position;&#10;        player.transform.rotation = exitPoint.rotation;&#10;&#10;        // 플레이어 이동 허용&#10;        CharacterController cc = player.GetComponent&lt;CharacterController&gt;();&#10;        if (cc != null) cc.enabled = true;&#10;    }&#10;}&#10;&#10;" />
              <option name="updatedContent" value="using UnityEngine;&#10;&#10;/// &lt;summary&gt;단순한 자동차 시스템 - 운전 + 승하차 통합&lt;/summary&gt;&#10;[RequireComponent(typeof(Rigidbody))]&#10;public class CarController : MonoBehaviour&#10;{&#10;    [Header(&quot;자동차 설정&quot;)]&#10;    public float speed = 30f;           // 속도&#10;    public float turnSpeed = 100f;      // 회전 속도&#10;    public float acceleration = 5f;     // 가속도&#10;&#10;    [Header(&quot;승하차 설정&quot;)]&#10;    public Transform driverSeat;        // 운전석 위치&#10;    public Transform exitPoint;         // 하차 위치&#10;&#10;    private Rigidbody rb;&#10;    private float currentSpeed;&#10;    private float targetSpeed;&#10;    &#10;    // 승하차 관련&#10;    private bool playerNear = false;    // 플레이어가 근처에 있는지&#10;    private bool driving = false;       // 운전 중인지&#10;    private GameObject player;          // 플레이어 오브젝트&#10;&#10;    void Start()&#10;    {&#10;        rb = GetComponent&lt;Rigidbody&gt;();&#10;        rb.centerOfMass = new Vector3(0, -0.5f, 0); // 안정성을 위한 낮은 무게중심&#10;    }&#10;&#10;    void Update()&#10;    {&#10;        // E 키로 승하차&#10;        if (playerNear &amp;&amp; Input.GetKeyDown(KeyCode.F))&#10;        {&#10;            if (driving)&#10;                GetOutOfCar();&#10;            else&#10;                GetInCar();&#10;        }&#10;&#10;        // 운전 중일 때만 자동차 조작 가능&#10;        if (driving)&#10;        {&#10;            HandleCarInput();&#10;        }&#10;    }&#10;&#10;    void HandleCarInput()&#10;    {&#10;        // 간단한 입력&#10;        float vertical = Input.GetAxis(&quot;Vertical&quot;);     // W/S&#10;        float horizontal = Input.GetAxis(&quot;Horizontal&quot;); // A/D&#10;        bool brake = Input.GetKey(KeyCode.Space);       // 스페이스&#10;&#10;        // 목표 속도 설정&#10;        if (brake)&#10;            targetSpeed = 0f;&#10;        else&#10;            targetSpeed = vertical * speed;&#10;&#10;        // 부드러운 가속/감속&#10;        currentSpeed = Mathf.MoveTowards(currentSpeed, targetSpeed, acceleration * Time.deltaTime * 10f);&#10;&#10;        // 회전 (이동 중일 때만)&#10;        if (Mathf.Abs(currentSpeed) &gt; 0.1f)&#10;        {&#10;            float turn = horizontal * turnSpeed * Time.deltaTime;&#10;            if (currentSpeed &lt; 0) turn *= -1; // 후진시 반전&#10;            transform.Rotate(0, turn, 0);&#10;        }&#10;    }&#10;&#10;    void FixedUpdate()&#10;    {&#10;        // 운전 중일 때만 이동&#10;        if (driving)&#10;        {&#10;            Vector3 forwardMovement = transform.forward * currentSpeed;&#10;            rb.linearVelocity = new Vector3(forwardMovement.x, rb.linearVelocity.y, forwardMovement.z);&#10;        }&#10;        else&#10;        {&#10;            // 운전 중이 아닐 때는 차량을 완전히 정지&#10;            rb.linearVelocity = new Vector3(0, rb.linearVelocity.y, 0);&#10;            rb.angularVelocity = Vector3.zero;&#10;        }&#10;    }&#10;&#10;    void OnTriggerEnter(Collider other)&#10;    {&#10;        if (other.CompareTag(&quot;Player&quot;))&#10;        {&#10;            playerNear = true;&#10;            player = other.gameObject;&#10;        }&#10;    }&#10;&#10;    void OnTriggerExit(Collider other)&#10;    {&#10;        if (other.CompareTag(&quot;Player&quot;))&#10;        {&#10;            playerNear = false;&#10;            player = null;&#10;        }&#10;    }&#10;&#10;    void GetInCar()&#10;    {&#10;        if (player == null || driverSeat == null) return;&#10;&#10;        driving = true;&#10;        &#10;        // 플레이어를 운전석으로 이동&#10;        player.transform.position = driverSeat.position;&#10;        player.transform.rotation = driverSeat.rotation;&#10;        player.transform.SetParent(driverSeat);&#10;&#10;        // 플레이어 이동 막기&#10;        CharacterController cc = player.GetComponent&lt;CharacterController&gt;();&#10;        if (cc != null) cc.enabled = false;&#10;    }&#10;&#10;    void GetOutOfCar()&#10;    {&#10;        if (player == null || exitPoint == null) return;&#10;&#10;        driving = false;&#10;        &#10;        // 자동차 완전 정지&#10;        currentSpeed = 0f;&#10;        targetSpeed = 0f;&#10;        rb.linearVelocity = new Vector3(0, rb.linearVelocity.y, 0);&#10;        rb.angularVelocity = Vector3.zero;&#10;&#10;        // 플레이어를 하차 위치로 이동&#10;        player.transform.SetParent(null);&#10;        player.transform.position = exitPoint.position;&#10;        player.transform.rotation = exitPoint.rotation;&#10;&#10;        // 플레이어 이동 허용&#10;        CharacterController cc = player.GetComponent&lt;CharacterController&gt;();&#10;        if (cc != null) cc.enabled = true;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>